pipeline {
    agent any

    triggers {
        pollSCM('*/5 * * * *')
    }

    tools {
        gradle 'default'
    }

    stages {
        stage('Checkout') {
            steps {
                 cleanWs()

                git branch: 'main',
                    url: 'https://github.com/ericHumberto/springboot-test-CI'

                sh 'ls -lat'

                sh 'cat build.gradle'
            }
        }
        stage('Compile') {
            steps {
                sh './gradlew clean classes --no-daemon'
            }
        }
        stage('Code Analysis') {
                    steps {
                        sh './gradlew sonarqube'
                    }
        }
        stage('Unit Tests') {
            steps {
                sh './gradlew test'
            }
            post {
                always {
                    junit '**/build/test-results/test/TEST-*.xml'
                }
            }
        }
        stage('Integration Tests') {
            steps {
                sh './gradlew integrationTest'
            }
            post {
                always {
                            junit '**/build/test-results/integrationTest/TEST-*.xml'
                }
            }
        }
        // stage('E2E') {
        // }
        // stage('Security') {
            // steps{
            //     Horusec
            
            //     OWASPZAP
            //     Veracode
            // }
        // }
        //     FF4J
    // stage('Promotion') {
    //     steps {
    //         timeout(time: 1, unit:'DAYS') {
    //             input 'Deploy to Production?'
    //         }
    //     }
    // }
    // stage('Deploy to Production') {
    //     environment {
    //         HEROKU_API_KEY = credentials('HEROKU_API_KEY')
    //     }
    //     steps {
    //         unstash 'app'
    //         gradlew('deployHeroku')
    //     }
    // }
    }
// post {
//     failure {
//         mail to: 'eric.c.humberto@gmail.com', subject: 'Build failed', body: 'Please fix!'
//     }
// }
}

// def gradlew(String... args) {
//     sh "./gradlew ${args.join(' ')} -s"
// }
